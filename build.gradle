plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
ext {
    springBootVersion = '2.6.1'
}
group = 'mk_tech'
version = '1.0'
sourceCompatibility = '1.11'

repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'mysql:mysql-connector-java:8.0.27'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    testImplementation("junit:junit")

    testImplementation 'junit:junit:4.13.2'

    implementation 'com.google.guava:guava:29.0-jre'
}
test {
    useJUnitPlatform()
}
//
//application {
//    mainClass = 'mk_tech.Application'
//}
//
//bootJar {
//    mainClass = 'mk_tech.Application'
//}
//
//jar {
//    archiveBaseName = 'intranet'
//    archiveVersion =  '1.0'
//    manifest {
//        attributes(
//                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
//                'Main-Class': 'mk_tech.Application'
//        )
//    }
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}
